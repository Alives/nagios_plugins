#!/bin/bash
directory=/usr/local/crashplan
warning=24
critical=72

timeZone=$(date | awk '{print $5}')
currentDate=$(date "+%s")

while getopts "d:w:c:" optionName; do
case "$optionName" in
d) directory=("$OPTARG");;
w) warning=( $OPTARG );;
c) critical=( $OPTARG );;
esac
done
properties=${directory}/cp.properties

# check to see if the cp.properties file exists
if ! [ -f "${properties}" ];
then
        printf "CRITICAL - the CrashPlan backup you pointed to does not exist! - ${properties}\n"
        exit 2
fi

lastBackupLine=$(grep -n lastCompletedBackupTimestamp "${properties}")
if [ -z "$lastBackupLine" ]; then
        printf "CRITICAL - Could not read the last backup date. Has an initial backup occurred?\n"
        exit 2
fi
lastBackupDateString=$(echo ${lastBackupLine} | awk -F= '{print $NF}' | sed -e 's/.\{5\}$//' -e 's/\\//g' -e 's/T/ /g')
lastBackupDate=$(date -d "${lastBackupDateString} $timeZone" "+%s" )

diff=$((${currentDate} - ${lastBackupDate}))

((h=${diff}/3600))
((m=(${diff}%3600)/60))
((s=${diff}%60))
diff_time=$(printf "Last backup %02dh %02dm %02ds ago." ${h} ${m} ${s})

if [ "${diff}" -gt "$((${critical} * 60 * 60))" ]; then
        # this cert is has already expired! return critical status.
        printf "CRITICAL - No backup in over ${critical} hours! ${diff_time}\n"
        exit 2
elif [ "${diff}" -gt "$((${warning} * 60 * 60))" ]; then
        # this cert is expiring within the warning threshold. return warning status.
        printf "WARNING - No backup in over ${warning} hours! ${diff_time}\n"
        exit 1
fi

printf "OK - Backed up within the last ${warning} hours. ${diff_time}\n"
exit 0
